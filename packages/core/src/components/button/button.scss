@import './button-vars';
@import '../../mixins/box-sizing';
@import '../../mixins/focus-state';

$btn-lg-height: 56px;
$btn-md-height: 48px;
$btn-sm-height: 40px;
$btn-xs-height: 24px;
$btn-sm-only-icon-padding: 11px;
$btn-md-only-icon-padding: 13px;
$btn-lg-only-icon-padding: 17px;
$types: (primary, secondary, ghost, danger);
$props: (background, border-color, color, outline-color);
$iconProps: (fill, color);

:host {
  @include tds-box-sizing;

  display: inline-flex;
  align-items: center;
  border-radius: 4px;
  text-decoration: none;
  cursor: pointer;
  position: relative;

  button {
    font: var(--tds-detail-02);
    letter-spacing: var(--tds-detail-02-ls);
    display: inline-flex;
    align-items: center;
    border-radius: 4px;
    border: 1px solid;
    box-shadow: none;
    position: relative;
    text-decoration: none;
    cursor: pointer;
    padding: var(--tds-spacing-element-20);
    height: $btn-lg-height;
    outline: none;

    &:disabled,
    &.disabled {
      cursor: not-allowed;
    }

    &:focus-visible {
      outline: 2px solid var(--tds-blue-400);
      outline-offset: -2px;
    }

    &.xs {
      padding: var(--tds-spacing-element-4) var(--tds-spacing-element-8);
      height: $btn-xs-height;
      font-size: 12px;
      border-radius: 2px;
    }

    &.sm {
      padding: var(--tds-spacing-element-12);
      height: $btn-sm-height;

      &.icon {
        padding: 10px var(--tds-spacing-element-12);
      }

      &.only-icon {
        padding: $btn-sm-only-icon-padding;
      }
    }

    &.md {
      padding: var(--tds-spacing-element-16);
      height: $btn-md-height;

      &.icon {
        padding: 14px var(--tds-spacing-element-16);
      }

      &.only-icon {
        padding: $btn-md-only-icon-padding;
      }
    }

    &.lg {
      padding: var(--tds-spacing-element-20);
      height: $btn-lg-height;

      &.icon {
        padding: 18px var(--tds-spacing-element-20);
      }

      &.only-icon {
        padding: $btn-lg-only-icon-padding;
      }
    }

    &.fullbleed {
      width: 100%;
      display: flex;
      justify-content: center;
    }

    @each $type in $types {
      &.#{$type} {
        @each $prop in $props {
          #{$prop}: var(--tds-btn-#{$type}-#{$prop});
        }

        &.icon {
          @each $prop in $iconProps {
            fill: var(--tds-btn-icon-#{$type}-#{$prop});
            color: var(--tds-btn-icon-#{$type}-#{$prop});
          }
        }

        &:hover {
          @each $prop in $props {
            #{$prop}: var(--tds-btn-#{$type}-#{$prop}-hover);
          }
        }

        &:focus-visible {
          @each $prop in $props {
            #{$prop}: var(--tds-btn-#{$type}-#{$prop}-focus);
          }
        }

        &:active,
        &.active {
          @each $prop in $props {
            #{$prop}: var(--tds-btn-#{$type}-#{$prop}-active);
          }
        }

        &.disabled,
        &:disabled {
          @each $prop in $props {
            #{$prop}: var(--tds-btn-#{$type}-#{$prop}-disabled);
          }
        }
      }
    }
  }

  ::slotted([slot='icon']) {
    width: var(--tds-spacing-element-20);
    height: var(--tds-spacing-element-20);
  }

  .sm ::slotted([slot='icon']) {
    width: var(--tds-spacing-element-16);
    height: var(--tds-spacing-element-16);
  }

  &[disabled='true'] {
    pointer-events: none;

    ::slotted([slot='icon']) {
      pointer-events: none;
    }
  }

  &[fullbleed] {
    width: 100%;
    justify-content: center;
  }
}
